2025-06-15 13:06:16 - c.r.q.QuickCommerceBackendApplicationTests - Starting QuickCommerceBackendApplicationTests using Java 23.0.2 with PID 26574 (started by jitendrasharma in /Users/jitendrasharma/Documents/Project/Quick-Commerce-App-main/quick-commerce-backend)
2025-06-15 13:06:16 - c.r.q.QuickCommerceBackendApplicationTests - Running with Spring Boot v3.4.3, Spring v6.2.3
2025-06-15 13:06:16 - c.r.q.QuickCommerceBackendApplicationTests - No active profile set, falling back to 1 default profile: "default"
2025-06-15 13:06:16 - o.s.w.c.s.GenericWebApplicationContext - Refreshing org.springframework.web.context.support.GenericWebApplicationContext@60d1b21f
2025-06-15 13:06:16 - o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 13:06:16 - o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 7 JPA repository interfaces.
2025-06-15 13:06:16 - o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 13:06:16 - org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-06-15 13:06:16 - o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 13:06:16 - o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 13:06:17 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-15 13:06:17 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@3340ce58
2025-06-15 13:06:17 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-15 13:06:17 - o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-15 13:06:17 - o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 13:06:18 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 13:06:18 - o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-15 13:06:18 - o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-15 13:06:18 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - 28 mappings in 'requestMappingHandlerMapping'
2025-06-15 13:06:18 - o.s.w.s.c.a.WebMvcConfigurer - Default resource handling disabled
2025-06-15 13:06:18 - o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-15 13:06:18 - o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-15 13:06:18 - o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-15 13:06:18 - o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-15 13:06:18 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-15 13:06:18 - c.r.q.QuickCommerceBackendApplicationTests - Started QuickCommerceBackendApplicationTests in 2.85 seconds (process running for 3.24)
2025-06-15 13:06:19 - o.s.w.c.s.GenericWebApplicationContext - Closing org.springframework.web.context.support.GenericWebApplicationContext@60d1b21f, started on Sun Jun 15 13:06:16 IST 2025
2025-06-15 13:06:19 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 13:06:19 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-15 13:06:19 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-15 13:06:21 - c.r.q.QuickCommerceBackendApplication - Starting QuickCommerceBackendApplication using Java 23.0.2 with PID 26600 (/Users/jitendrasharma/Documents/Project/Quick-Commerce-App-main/quick-commerce-backend/target/classes started by jitendrasharma in /Users/jitendrasharma/Documents/Project/Quick-Commerce-App-main/quick-commerce-backend)
2025-06-15 13:06:21 - c.r.q.QuickCommerceBackendApplication - Running with Spring Boot v3.4.3, Spring v6.2.3
2025-06-15 13:06:21 - c.r.q.QuickCommerceBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-15 13:06:21 - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-15 13:06:21 - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-15 13:06:22 - o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 13:06:22 - o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 26 ms. Found 7 JPA repository interfaces.
2025-06-15 13:06:22 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-15 13:06:22 - o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-15 13:06:22 - o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-15 13:06:22 - o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-06-15 13:06:22 - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-15 13:06:22 - o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 585 ms
2025-06-15 13:06:22 - o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 13:06:22 - org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-06-15 13:06:22 - o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 13:06:22 - o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 13:06:22 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-15 13:06:22 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@55a0bba2
2025-06-15 13:06:22 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-15 13:06:22 - o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-15 13:06:23 - o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 13:06:23 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 13:06:23 - o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2025-06-15 13:06:23 - c.r.q.security.JwtFilter - Filter 'jwtFilter' configured for use
2025-06-15 13:06:23 - o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-15 13:06:23 - o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-15 13:06:23 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - 28 mappings in 'requestMappingHandlerMapping'
2025-06-15 13:06:23 - o.s.w.s.c.a.WebMvcConfigurer - Default resource handling disabled
2025-06-15 13:06:23 - o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-15 13:06:23 - o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-15 13:06:23 - o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-15 13:06:23 - o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-15 13:06:23 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-15 13:06:23 - o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-15 13:06:23 - o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-15 13:06:24 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-15 13:06:24 - c.r.q.QuickCommerceBackendApplication - Started QuickCommerceBackendApplication in 2.27 seconds (process running for 2.422)
2025-06-15 13:06:41 - o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-15 13:06:41 - o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-15 13:06:41 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 13:06:41 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-15 13:06:41 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-06-15 13:06:47 - c.r.q.QuickCommerceBackendApplication - Starting QuickCommerceBackendApplication using Java 21.0.2 with PID 26660 (/Users/jitendrasharma/Documents/Project/Quick-Commerce-App-main/quick-commerce-backend/target/classes started by jitendrasharma in /Users/jitendrasharma/Documents/Project/Quick-Commerce-App-main/quick-commerce-backend)
2025-06-15 13:06:47 - c.r.q.QuickCommerceBackendApplication - Running with Spring Boot v3.4.3, Spring v6.2.3
2025-06-15 13:06:47 - c.r.q.QuickCommerceBackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-06-15 13:06:47 - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2025-06-15 13:06:47 - o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2025-06-15 13:06:47 - o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-06-15 13:06:47 - o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 23 ms. Found 7 JPA repository interfaces.
2025-06-15 13:06:48 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 8080 (http)
2025-06-15 13:06:48 - o.a.coyote.http11.Http11NioProtocol - Initializing ProtocolHandler ["http-nio-8080"]
2025-06-15 13:06:48 - o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-06-15 13:06:48 - o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.36]
2025-06-15 13:06:48 - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-06-15 13:06:48 - o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 557 ms
2025-06-15 13:06:48 - o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-06-15 13:06:48 - org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.8.Final
2025-06-15 13:06:48 - o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-06-15 13:06:48 - o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-06-15 13:06:48 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-06-15 13:06:48 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@819ce95
2025-06-15 13:06:48 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-06-15 13:06:48 - o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 8.3
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-06-15 13:06:48 - o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-06-15 13:06:48 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 13:06:49 - o.s.web.filter.CorsFilter - Filter 'corsFilter' configured for use
2025-06-15 13:06:49 - c.r.q.security.JwtFilter - Filter 'jwtFilter' configured for use
2025-06-15 13:06:49 - o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-06-15 13:06:49 - o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailsService
2025-06-15 13:06:49 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - 28 mappings in 'requestMappingHandlerMapping'
2025-06-15 13:06:49 - o.s.w.s.c.a.WebMvcConfigurer - Default resource handling disabled
2025-06-15 13:06:49 - o.s.w.s.h.SimpleUrlHandlerMapping - Patterns [/swagger-ui*/*swagger-initializer.js, /swagger-ui*/**] in 'resourceHandlerMapping'
2025-06-15 13:06:49 - o.s.s.web.DefaultSecurityFilterChain - Will secure any request with filters: DisableEncodeUrlFilter, WebAsyncManagerIntegrationFilter, SecurityContextHolderFilter, HeaderWriterFilter, CorsFilter, LogoutFilter, JwtFilter, RequestCacheAwareFilter, SecurityContextHolderAwareRequestFilter, AnonymousAuthenticationFilter, SessionManagementFilter, ExceptionTranslationFilter, AuthorizationFilter
2025-06-15 13:06:49 - o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-06-15 13:06:49 - o.s.w.s.m.m.a.RequestMappingHandlerAdapter - ControllerAdvice beans: 0 @ModelAttribute, 0 @InitBinder, 1 RequestBodyAdvice, 1 ResponseBodyAdvice
2025-06-15 13:06:49 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - ControllerAdvice beans: 2 @ExceptionHandler, 1 ResponseBodyAdvice
2025-06-15 13:06:49 - o.s.b.d.a.OptionalLiveReloadServer - LiveReload server is running on port 35729
2025-06-15 13:06:49 - o.a.coyote.http11.Http11NioProtocol - Starting ProtocolHandler ["http-nio-8080"]
2025-06-15 13:06:49 - o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 8080 (http) with context path '/'
2025-06-15 13:06:49 - c.r.q.QuickCommerceBackendApplication - Started QuickCommerceBackendApplication in 2.258 seconds (process running for 2.621)
2025-06-15 13:06:58 - o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-06-15 13:06:58 - o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-06-15 13:06:58 - o.s.web.servlet.DispatcherServlet - Detected StandardServletMultipartResolver
2025-06-15 13:06:58 - o.s.web.servlet.DispatcherServlet - Detected AcceptHeaderLocaleResolver
2025-06-15 13:06:58 - o.s.web.servlet.DispatcherServlet - Detected FixedThemeResolver
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@1850d607
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - Detected org.springframework.web.servlet.support.SessionFlashMapManager@1bec5a1a
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - enableLoggingRequestDetails='false': request parameters and headers will be masked to prevent unsafe logging of potentially sensitive data
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:06:59 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:06:59 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:06:59 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:06:59 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:06:59 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:06:59 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:06:59 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:06:59 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:06:59 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:06:59 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:06:59 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:06:59 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:06:59 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:06:59 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:06:59 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:06:59 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:06:59 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:06:59 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:06:59 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:06:59 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:06:59 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:07:20 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/signup
2025-06-15 13:07:20 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/signup
2025-06-15 13:07:20 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:07:20 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:07:20 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:07:20 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/signup
2025-06-15 13:07:20 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/signup", parameters={}
2025-06-15 13:07:20 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#register(UserRegisterDTO)
2025-06-15 13:07:20 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserRegisterDTO(name=jitendra, email=j@test.com, password=123456, role=null)]
2025-06-15 13:07:20 - c.r.q.controllers.AuthController - Entering register
2025-06-15 13:07:20 - c.r.q.service.impl.AuthServiceImpl - Entering register method for email: j@test.com
2025-06-15 13:07:20 - c.r.q.service.impl.AuthServiceImpl - User registered successfully: j@test.com
2025-06-15 13:07:20 - c.r.q.controllers.AuthController - Exit register
2025-06-15 13:07:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:07:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User registered successfully, data=UserDTO(id=1, name=jitendra, em (truncated)...]
2025-06-15 13:07:20 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:11 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:09:11 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:09:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:09:11 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:09:11 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:09:11 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:09:11 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:09:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:09:11 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.CartServiceImpl - Cart not found for user: j@test.com. Creating a new cart.
2025-06-15 13:09:11 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:09:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:09:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:09:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:09:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:09:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:09:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:09:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:09:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:09:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:16 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=2&size=6
2025-06-15 13:09:16 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:16 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:16 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:16 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:16 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:16 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:16 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=2&size=6
2025-06-15 13:09:16 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=2&size=6", parameters={masked}
2025-06-15 13:09:16 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:09:16 - c.r.q.controllers.ProductController - Fetching products - Page: 2, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:09:16 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 2, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:09:16 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:09:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=2, size=6, t (truncated)...]
2025-06-15 13:09:16 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:16 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:09:16 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:16 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:16 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:16 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:16 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:16 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:16 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:16 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:09:16 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:09:16 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:09:16 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:09:16 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:09:16 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:09:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:09:16 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:09:20 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:09:20 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:09:20 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:09:20 - c.r.q.service.TokenService - Validating token
2025-06-15 13:09:20 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:09:20 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:09:20 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:09:20 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:09:20 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:09:20 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:09:20 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:09:20 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:09:20 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:09:20 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:09:20 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:09:20 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:09:20 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:09:20 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:09:20 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:09:20 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:09:20 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:09:20 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:09:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:09:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:09:20 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:02 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:16:02 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:16:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:16:02 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:16:02 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:16:02 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:16:02 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:16:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:16:02 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:14 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:14 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:14 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:14 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:14 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:14 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:14 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:14 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:14 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:14 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:14 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:14 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:14 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:14 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:14 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:14 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:14 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:14 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:14 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:14 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:14 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:14 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:14 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:14 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:14 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:14 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:14 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:14 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:14 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:14 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:14 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:17 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:17 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:17 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:17 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:17 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:17 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:17 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:17 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:17 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:17 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:17 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:17 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:17 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:17 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:17 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:17 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:17 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:17 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:17 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:17 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:17 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:17 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:17 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:17 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:17 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:17 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:17 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:17 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:17 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:21 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:21 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:21 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:21 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:21 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:21 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:21 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:21 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:21 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:21 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:21 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:21 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:21 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:21 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:21 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:21 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:21 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:21 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:21 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:21 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:21 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:21 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:21 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:21 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:21 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:21 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:21 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:21 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:21 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:21 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:21 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:21 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:21 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:21 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:21 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:22 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:22 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:22 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:22 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:22 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:22 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:22 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:22 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:22 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:22 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:22 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:22 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:22 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:22 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:22 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:22 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:22 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:22 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:22 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:22 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:22 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:22 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:22 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:22 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:22 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:22 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:22 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:22 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:22 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:22 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:22 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:22 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:22 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:22 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:22 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:24 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:24 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:24 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:24 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:24 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:24 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:24 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:24 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:24 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:24 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:24 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:24 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:24 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:24 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:24 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:24 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:24 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:24 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:24 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:24 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:24 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:24 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:24 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:24 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:24 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:16:24 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:16:24 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:24 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:16:24 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:16:24 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=1000 (truncated)...]
2025-06-15 13:16:24 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:26 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:26 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:26 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:26 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:26 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:26 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:26 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:16:26 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:16:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:16:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:16:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:16:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:16:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:16:26 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:16:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:16:26 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:16:26 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:16:26 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:16:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:16:26 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:16:26 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:16:26 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 0 records found
2025-06-15 13:16:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:16:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[], page=1, size=6, t (truncated)...]
2025-06-15 13:16:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:00 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/products
2025-06-15 13:17:00 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/products
2025-06-15 13:17:00 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:00 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:00 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:00 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:00 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:00 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:00 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:00 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:00 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:00 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:00 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:00 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:00 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:00 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:00 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/products
2025-06-15 13:17:00 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/products", parameters={}
2025-06-15 13:17:00 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#createProduct(ProductDTO)
2025-06-15 13:17:00 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [ProductDTO(productId=null, name=apple, description=4 qyt.. it is good product.. , price=150.0, updat (truncated)...]
2025-06-15 13:17:00 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.createProduct(com.roshan798.quick_commerce_backend.dto.product.ProductDTO); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:17:00 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.createProduct(com.roshan798.quick_commerce_backend.dto.product.ProductDTO); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:17:00 - c.r.q.controllers.ProductController - Entering createProduct with request body: ProductDTO(productId=null, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=null, createdAt=null, images=null)
2025-06-15 13:17:00 - c.r.q.s.impl.ProductServiceImpl - Adding new product: ProductDTO(productId=null, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=null, createdAt=null, images=null)
2025-06-15 13:17:00 - c.r.q.s.impl.ProductServiceImpl - Product saved successfully: Product(id=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, createdAt=2025-06-15T07:47:00.371302Z, updatedAt=2025-06-15T07:47:00.371314Z, orders=null, inventories=null, images=null)
2025-06-15 13:17:00 - c.r.q.controllers.ProductController - Exiting createProduct with response: ResponseDTO(success=true, message=Product added successfully, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:17:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Product added successfully, data=ProductDTO(productId=1, name=appl (truncated)...]
2025-06-15 13:17:00 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:17:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:17:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:01 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:17:01 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:17:01 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:17:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:01 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:17:01 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:17:01 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:07 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:17:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:07 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:07 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:07 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:07 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:07 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:07 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:17:07 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:17:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:17:07 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:17:07 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:17:07 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:17:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:17:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:07 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:17:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:07 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:07 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:07 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:07 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:07 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:07 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:07 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:17:07 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:17:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:17:07 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:17:07 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:17:07 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:17:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:17:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:17:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:17:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:17:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:11 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:11 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:11 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:11 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:11 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:11 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:11 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:11 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:11 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:11 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:17:11 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:17:11 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:11 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:17:11 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:17:11 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:11 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:11 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:26 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:17:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:26 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:26 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:17:26 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:17:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:26 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:17:26 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:17:26 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:26 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:17:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:26 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:26 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:26 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:17:26 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:17:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:26 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:17:26 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:17:26 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:17:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:33 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:33 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:33 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:33 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:33 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:33 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:33 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:17:33 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:17:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:33 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:17:33 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:17:33 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:33 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:17:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:33 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:33 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:33 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:33 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:33 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:33 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:33 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:33 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:17:33 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:17:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:17:33 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:17:33 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:17:33 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:17:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:17:33 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:34 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:17:34 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:34 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:17:34 - c.r.q.service.TokenService - Validating token
2025-06-15 13:17:34 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:17:34 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:17:34 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:17:34 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:17:34 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:17:34 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:17:34 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:17:34 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:17:34 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:17:34 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:17:34 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:17:34 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:17:34 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:17:34 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:17:34 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:17:34 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:17:34 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:17:34 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:17:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:17:34 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:17:58 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/signup
2025-06-15 13:17:58 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/signup
2025-06-15 13:17:58 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:17:58 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:17:58 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:17:58 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/signup
2025-06-15 13:17:58 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/signup", parameters={}
2025-06-15 13:17:58 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#register(UserRegisterDTO)
2025-06-15 13:17:58 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserRegisterDTO(name=a@test.com, email=a@test.com, password=123456, role=null)]
2025-06-15 13:17:58 - c.r.q.controllers.AuthController - Entering register
2025-06-15 13:17:58 - c.r.q.service.impl.AuthServiceImpl - Entering register method for email: a@test.com
2025-06-15 13:17:58 - c.r.q.service.impl.AuthServiceImpl - User registered successfully: a@test.com
2025-06-15 13:17:58 - c.r.q.controllers.AuthController - Exit register
2025-06-15 13:17:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:17:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User registered successfully, data=UserDTO(id=2, name=a@test.com,  (truncated)...]
2025-06-15 13:17:58 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:09 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:18:09 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:18:09 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:18:09 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=a@test.com, password=123456)]
2025-06-15 13:18:09 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:18:09 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: a@test.com
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Generating access token for email: a@test.com
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Generating refresh token for email: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: a@test.com
2025-06-15 13:18:09 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=2, name=a@test.com, e (truncated)...]
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:09 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:09 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:18:09 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:18:09 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.CartServiceImpl - Cart not found for user: a@test.com. Creating a new cart.
2025-06-15 13:18:09 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:09 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:09 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:18:09 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:18:09 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:18:09 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:18:09 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:09 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:09 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:09 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:09 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:18:09 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:18:09 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:18:09 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:18:09 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:18:09 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:18:09 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:18:09 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:09 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:18:09 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:26 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:18:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:26 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:18:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:18:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:18:26 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:26 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:26 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:26 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:18:26 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:18:26 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:18:26 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:18:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:18:26 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:18:26 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:18:26 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:18:26 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:18:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:18:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:41 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/signup
2025-06-15 13:18:41 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/signup
2025-06-15 13:18:41 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:41 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:18:41 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:18:41 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/signup
2025-06-15 13:18:41 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/signup", parameters={}
2025-06-15 13:18:41 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#register(UserRegisterDTO)
2025-06-15 13:18:41 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserRegisterDTO(name=gokul, email=g@test.com, password=123456, role=null)]
2025-06-15 13:18:41 - c.r.q.controllers.AuthController - Entering register
2025-06-15 13:18:41 - c.r.q.service.impl.AuthServiceImpl - Entering register method for email: g@test.com
2025-06-15 13:18:41 - c.r.q.service.impl.AuthServiceImpl - User registered successfully: g@test.com
2025-06-15 13:18:41 - c.r.q.controllers.AuthController - Exit register
2025-06-15 13:18:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User registered successfully, data=UserDTO(id=3, name=gokul, email (truncated)...]
2025-06-15 13:18:41 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:53 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:18:53 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:18:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:18:53 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=g@test.com, password=123456)]
2025-06-15 13:18:53 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:18:53 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: g@test.com
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: g@test.com
2025-06-15 13:18:53 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=3, name=gokul, email= (truncated)...]
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:18:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:18:53 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.CartServiceImpl - Cart not found for user: g@test.com. Creating a new cart.
2025-06-15 13:18:53 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:18:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:18:53 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:18:53 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:18:53 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:53 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:18:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:18:53 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:18:53 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:18:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:18:53 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:18:53 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:18:53 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:18:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:18:57 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:18:57 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:18:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:18:57 - c.r.q.service.TokenService - Validating token
2025-06-15 13:18:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:18:57 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:18:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:18:57 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:18:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:18:57 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:18:57 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:18:57 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:18:57 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:18:57 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:18:57 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:18:57 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:18:57 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:18:57 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:18:57 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:18:57 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:18:57 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:18:57 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:18:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:18:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:18:57 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:41 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:19:41 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:19:41 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:19:41 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=g@test.com, password=123456)]
2025-06-15 13:19:41 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:19:41 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: g@test.com
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: g@test.com
2025-06-15 13:19:41 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=3, name=gokul, email= (truncated)...]
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:41 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:41 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:19:41 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:19:41 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:41 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:41 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:19:41 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:19:41 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:19:41 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:19:41 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:41 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:41 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:41 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:41 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:41 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:41 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:41 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:19:41 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:19:41 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:19:41 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:19:41 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:41 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:19:41 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:19:57 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:19:57 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:19:57 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:19:57 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:19:57 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:19:57 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:19:57 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:19:57 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: g@test.com
2025-06-15 13:19:57 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:19:57 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: g@test.com
2025-06-15 13:19:57 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:19:57 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=3, name=gokul, emai (truncated)...]
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=3, name=gokul, emai (truncated)...]
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:57 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:57 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:57 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:57 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:57 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:57 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:19:57 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:19:57 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:57 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:57 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:19:57 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:58 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:19:58 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:58 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:58 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:58 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:58 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:58 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:58 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:58 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:19:58 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:19:58 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:19:58 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:19:58 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:19:58 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:19:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:19:58 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:19:58 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:19:58 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:19:58 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:19:58 - c.r.q.service.TokenService - Validating token
2025-06-15 13:19:58 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:19:58 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:19:58 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:19:58 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:19:58 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:19:58 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:19:58 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:19:58 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:19:58 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:19:58 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:19:58 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:19:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:19:58 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:19:58 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:20:30 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:20:30 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:20:30 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:20:30 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: g@test.com
2025-06-15 13:20:30 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:20:30 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: g@test.com
2025-06-15 13:20:30 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=3, name=gokul, emai (truncated)...]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=3, name=gokul, emai (truncated)...]
2025-06-15 13:20:30 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:20:30 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:20:30 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:20:30 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:20:30 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:30 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:30 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:30 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:30 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:30 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:30 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:30 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:20:30 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:20:30 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:20:30 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:20:30 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:30 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:20:30 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:34 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:20:34 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:34 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:34 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:34 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:34 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:34 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:20:34 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:20:34 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:20:34 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:20:34 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:20:34 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:20:34 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:20:34 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:20:34 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:20:34 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:20:34 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:20:34 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:20:34 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:20:34 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:20:34 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:20:34 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:20:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:20:34 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:43 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:20:43 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:20:43 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:43 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:20:43 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:20:43 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:20:43 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:20:43 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:20:43 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=a@test.com, password=123456)]
2025-06-15 13:20:43 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:20:43 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: a@test.com
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Generating access token for email: a@test.com
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Generating refresh token for email: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: a@test.com
2025-06-15 13:20:44 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=2, name=a@test.com, e (truncated)...]
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:44 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:44 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:20:44 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:20:44 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:44 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:44 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:20:44 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:20:44 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:20:44 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:20:44 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:44 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:44 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:44 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:44 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:20:44 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:20:44 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:20:44 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:20:44 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:20:44 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:20:44 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:20:44 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:44 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:20:44 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:47 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:20:47 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:20:47 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:47 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:47 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:47 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:47 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:47 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:20:47 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:20:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:47 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:20:47 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:20:47 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:20:47 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:20:47 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:20:47 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:20:47 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:20:47 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:20:47 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:20:47 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:20:47 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:20:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:47 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:20:47 - c.r.q.service.impl.CartServiceImpl - Product 1 not found in cart. Adding new item.
2025-06-15 13:20:47 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:20:47 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:20:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:20:47 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:20:51 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:20:51 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:20:51 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:20:51 - c.r.q.service.TokenService - Validating token
2025-06-15 13:20:51 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:20:51 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:20:51 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:20:51 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:20:51 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:51 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:20:51 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:20:51 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:20:51 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:20:51 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:20:51 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:20:51 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:20:51 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:20:51 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:20:51 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:20:51 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:20:51 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:20:51 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:20:51 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:20:51 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:20:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:20:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:20:51 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:01 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items/decrease?productId=1
2025-06-15 13:21:01 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:21:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:01 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:01 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:01 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:01 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:01 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:01 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:01 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:21:01 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:21:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:21:01 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:21:01 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:21:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:01 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:21:01 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:21:01 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:21:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:21:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:02 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:21:02 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:21:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:02 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:02 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:02 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:02 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:02 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:02 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:02 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:21:02 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:21:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:21:02 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:21:02 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:21:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:02 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:21:02 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:21:02 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:21:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:21:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:31 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items/1
2025-06-15 13:21:31 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/cart/items/1
2025-06-15 13:21:31 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:31 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:31 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:31 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:31 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:31 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:31 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:31 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:31 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:31 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:31 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:31 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:31 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:31 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/cart/items/1
2025-06-15 13:21:31 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/cart/items/1", parameters={}
2025-06-15 13:21:31 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#removeProductFromCart(Long, HttpServletRequest)
2025-06-15 13:21:31 - c.r.q.service.impl.CartServiceImpl - Removing product 1 from cart for user a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:21:31 - c.r.q.service.impl.CartServiceImpl - Product 1 removed from cart for user a@test.com
2025-06-15 13:21:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Product removed from cart., data=CartDTO(cartId=2, userId=2, cartI (truncated)...]
2025-06-15 13:21:31 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:35 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:21:35 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:35 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:35 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:35 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:35 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:35 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:35 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:35 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:21:35 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:21:35 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:21:35 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:21:35 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:21:35 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:21:35 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:35 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:21:35 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:35 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:21:35 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:35 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:35 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:35 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:35 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:35 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:35 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:35 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:35 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:21:35 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:21:35 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:21:35 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:21:35 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:21:35 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:21:35 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:35 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:21:35 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:21:36 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:21:36 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:21:36 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:21:36 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:21:36 - c.r.q.service.TokenService - Validating token
2025-06-15 13:21:36 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:21:36 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:21:36 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:21:36 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:21:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:36 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:21:36 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:21:36 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:21:36 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:21:36 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:21:36 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:21:36 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:21:36 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:21:36 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:21:36 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:21:36 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:21:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:21:36 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:21:36 - c.r.q.service.impl.CartServiceImpl - Product 1 not found in cart. Adding new item.
2025-06-15 13:21:36 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:21:36 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:21:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:21:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:21:36 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:40 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:22:40 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:40 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:40 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:40 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:40 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:40 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:22:40 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:22:40 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:22:40 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:22:40 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:22:40 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:22:40 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:22:40 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:22:40 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:40 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:22:40 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:40 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:22:40 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:40 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:40 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:40 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:40 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:40 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:22:40 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:22:40 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:22:40 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:22:40 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:22:40 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:22:40 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:22:40 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:22:40 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:22:40 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:40 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:22:40 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:42 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:22:42 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:42 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:42 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:42 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:42 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:42 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:22:42 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:22:42 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:22:42 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:22:42 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:22:42 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:22:42 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:22:42 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:22:42 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:22:42 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:22:42 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:22:42 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:22:42 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:22:42 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:22:42 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:22:42 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:22:42 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:42 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:22:42 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:56 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:22:56 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:22:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:22:56 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:22:56 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:22:56 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:22:56 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:22:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:22:56 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:22:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:22:56 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:22:56 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:22:56 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:22:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:22:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:22:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:22:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:22:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:22:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:22:56 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:22:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:22:56 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:22:56 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:22:56 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:22:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:22:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:23:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:23:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:23:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:23:02 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:23:02 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:23:02 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:23:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:23:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:23:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:23:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:23:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:23:02 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:23:02 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:23:02 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:23:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:23:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:10 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:23:10 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:10 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:10 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:10 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:10 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:10 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:10 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:23:10 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:23:10 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:23:10 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:23:10 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:23:10 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:23:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:23:10 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:10 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:23:10 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:10 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:10 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:10 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:10 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:10 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:10 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:10 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:23:10 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:23:10 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:23:10 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:23:10 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:23:10 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:23:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:23:10 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:14 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:23:14 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:14 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:14 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:14 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:14 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:14 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:14 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:14 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:23:14 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:23:14 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:23:14 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:23:14 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:23:14 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:23:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:23:14 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:14 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:23:14 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:14 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:14 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:14 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:14 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:14 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:14 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:14 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:14 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:23:14 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:23:14 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:23:14 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:23:14 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:23:14 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=null))
2025-06-15 13:23:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:23:14 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:23:56 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/upload/1
2025-06-15 13:23:56 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/images/upload/1
2025-06-15 13:23:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:23:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:23:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:23:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:23:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:23:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:23:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:23:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:23:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:23:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:23:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:23:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:23:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:23:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:23:56 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/images/upload/1
2025-06-15 13:23:56 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/images/upload/1", parameters={multipart}
2025-06-15 13:23:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#uploadImage(MultipartFile[], Long)
2025-06-15 13:23:56 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:23:56 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:23:56 - c.r.q.controllers.ImageController - Uploading image for product ID: 1
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - Uploading images for product ID: 1
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - 📷 Original image size: 629.36 KB
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - Converting apple_158989157.jpg to JPEG format
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - ✅ Image '34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg' uploaded successfully. Final size: 72.87 KB
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - ⏱️ Image '34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg' uploaded in 220 ms.
2025-06-15 13:23:56 - c.r.q.service.impl.ImageServiceImpl - Total 0 images uploaded successfully.
2025-06-15 13:23:56 - c.r.q.controllers.ImageController - Image uploaded successfully: [ImageUploadResultDTO(fileName=34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg, success=true, imageUrl=/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg, errorMessage=null, sizeInBytes=74614)]
2025-06-15 13:23:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:23:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image uploaded successfully, data=[ImageUploadResultDTO(fileName=3 (truncated)...]
2025-06-15 13:23:56 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:24:00 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:00 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:00 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:00 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:00 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:00 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:00 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:00 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:00 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:00 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:00 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:00 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:00 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:00 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:00 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:00 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:00 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:00 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:00 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:00 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:00 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:00 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:00 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:00 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:00 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:00 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:00 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:00 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:00 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:00 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:00 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:00 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:24:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:24:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:24:01 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:24:01 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:24:01 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:24:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:24:01 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:24:01 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: j@test.com
2025-06-15 13:24:01 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=1, name=jitendra, e (truncated)...]
2025-06-15 13:24:01 - c.r.q.service.impl.AuthServiceImpl - Tokens refreshed successfully for user: j@test.com
2025-06-15 13:24:01 - c.r.q.controllers.AuthController - Exit refreshTokens
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Tokens refreshed successfully, data=UserDTO(id=1, name=jitendra, e (truncated)...]
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:01 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:24:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:24:01 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:01 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:24:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:51 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:51 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:51 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:51 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:51 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:51 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:51 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:51 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:51 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:51 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:24:51 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:51 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:24:51 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:24:51 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:51 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:51 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:51 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:51 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:51 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:51 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:51 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:51 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:51 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:51 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:51 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:51 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:24:51 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:51 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:24:51 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:24:51 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:51 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:51 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:53 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:54 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:54 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:54 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:54 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:54 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:54 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:54 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:54 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:54 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:54 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:24:54 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:54 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:54 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:54 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:54 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:54 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:54 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:54 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:54 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:24:54 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:24:54 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:54 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:24:54 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:24:54 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:54 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:54 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:54 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:24:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:24:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:24:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:24:55 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:24:55 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:24:55 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg]))
2025-06-15 13:24:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:24:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:24:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:24:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:24:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:24:55 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:24:55 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:24:55 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg]))
2025-06-15 13:24:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:24:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:56 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:56 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:56 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:24:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:56 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:24:56 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:24:56 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:24:56 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:24:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:24:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:24:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:24:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:24:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:24:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:24:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:24:56 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:24:56 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:24:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:24:56 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:24:56 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:24:56 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:24:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:24:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:24:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:25:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:25:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:25:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:25:01 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:25:01 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:25:01 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg]))
2025-06-15 13:25:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:25:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:25:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:25:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:25:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:25:01 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:25:01 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:25:01 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg]))
2025-06-15 13:25:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:25:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:04 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:04 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:04 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:04 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:04 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:04 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:04 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:04 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:04 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:04 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:04 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:04 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:04 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:04 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:04 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg", parameters={}
2025-06-15 13:25:04 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#deleteImage(Long, String)
2025-06-15 13:25:04 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:04 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:04 - c.r.q.controllers.ImageController - Deleting image '34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg' for product ID: 1
2025-06-15 13:25:04 - c.r.q.service.impl.ImageServiceImpl - Deleting image '34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg' for product ID: 1
2025-06-15 13:25:04 - c.r.q.service.impl.ImageServiceImpl - ✅ Image moved to deleted folder: src/main/resources/static/deleted/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - c.r.q.service.impl.ImageServiceImpl - /images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - c.r.q.service.impl.ImageServiceImpl - /images/1/34c02843-9c00-4a81-b8b5-fe55a5077738.jpeg
2025-06-15 13:25:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image moved to deleted folder, data=null)]
2025-06-15 13:25:04 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:12 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/upload/1
2025-06-15 13:25:12 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/images/upload/1
2025-06-15 13:25:12 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:12 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:12 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:12 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:12 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:12 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:12 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:12 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:12 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:12 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:12 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:12 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:12 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:12 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:12 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/images/upload/1
2025-06-15 13:25:12 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/images/upload/1", parameters={multipart}
2025-06-15 13:25:12 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#uploadImage(MultipartFile[], Long)
2025-06-15 13:25:12 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:12 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:12 - c.r.q.controllers.ImageController - Uploading image for product ID: 1
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - Uploading images for product ID: 1
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - 📷 Original image size: 922.33 KB
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - Converting Screenshot 2025-05-08 at 9.43.15 AM.png to JPEG format
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - ✅ Image '632265df-37e7-49c5-a69c-5b3fc276559a.jpeg' uploaded successfully. Final size: 299.20 KB
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - ⏱️ Image '632265df-37e7-49c5-a69c-5b3fc276559a.jpeg' uploaded in 275 ms.
2025-06-15 13:25:12 - c.r.q.service.impl.ImageServiceImpl - Total 0 images uploaded successfully.
2025-06-15 13:25:12 - c.r.q.controllers.ImageController - Image uploaded successfully: [ImageUploadResultDTO(fileName=632265df-37e7-49c5-a69c-5b3fc276559a.jpeg, success=true, imageUrl=/images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg, errorMessage=null, sizeInBytes=306383)]
2025-06-15 13:25:12 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:12 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image uploaded successfully, data=[ImageUploadResultDTO(fileName=6 (truncated)...]
2025-06-15 13:25:12 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:25:14 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:14 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:14 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:14 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:14 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:14 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:14 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:14 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:14 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:14 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:14 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:14 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:14 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:14 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:14 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg", parameters={}
2025-06-15 13:25:14 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#deleteImage(Long, String)
2025-06-15 13:25:14 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:14 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:14 - c.r.q.controllers.ImageController - Deleting image '632265df-37e7-49c5-a69c-5b3fc276559a.jpeg' for product ID: 1
2025-06-15 13:25:14 - c.r.q.service.impl.ImageServiceImpl - Deleting image '632265df-37e7-49c5-a69c-5b3fc276559a.jpeg' for product ID: 1
2025-06-15 13:25:14 - c.r.q.service.impl.ImageServiceImpl - ✅ Image moved to deleted folder: src/main/resources/static/deleted/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - c.r.q.service.impl.ImageServiceImpl - /images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - c.r.q.service.impl.ImageServiceImpl - /images/1/632265df-37e7-49c5-a69c-5b3fc276559a.jpeg
2025-06-15 13:25:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:14 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image moved to deleted folder, data=null)]
2025-06-15 13:25:14 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:34 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/upload/1
2025-06-15 13:25:34 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/images/upload/1
2025-06-15 13:25:34 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:34 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:34 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:34 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:34 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:34 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:34 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:34 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:34 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:34 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:34 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:34 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:34 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:34 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:34 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/images/upload/1
2025-06-15 13:25:34 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/images/upload/1", parameters={multipart}
2025-06-15 13:25:34 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#uploadImage(MultipartFile[], Long)
2025-06-15 13:25:34 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:34 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:25:34 - c.r.q.controllers.ImageController - Uploading image for product ID: 1
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - Uploading images for product ID: 1
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - 📷 Original image size: 629.36 KB
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - Converting apple_158989157.jpg to JPEG format
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - ✅ Image 'b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg' uploaded successfully. Final size: 72.87 KB
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - ⏱️ Image 'b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg' uploaded in 69 ms.
2025-06-15 13:25:34 - c.r.q.service.impl.ImageServiceImpl - Total 0 images uploaded successfully.
2025-06-15 13:25:34 - c.r.q.controllers.ImageController - Image uploaded successfully: [ImageUploadResultDTO(fileName=b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg, success=true, imageUrl=/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg, errorMessage=null, sizeInBytes=74614)]
2025-06-15 13:25:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image uploaded successfully, data=[ImageUploadResultDTO(fileName=b (truncated)...]
2025-06-15 13:25:34 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:25:36 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:36 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:36 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:36 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:36 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:36 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:36 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:36 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:36 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:36 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:36 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:36 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:36 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:36 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:36 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:36 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:36 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:36 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:36 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:36 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:36 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:36 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:36 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:36 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:36 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:36 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:36 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:36 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:36 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:39 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:25:39 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:39 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:39 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:39 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:39 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:39 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:39 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:39 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:39 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:39 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:39 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:39 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:39 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:39 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:25:39 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:25:39 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:25:39 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:25:39 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:25:39 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:25:39 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:25:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:25:39 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:48 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:25:48 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:25:48 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:48 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:25:48 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:25:48 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:25:48 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:25:48 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:25:48 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:25:48 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:25:48 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:25:48 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:25:48 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:25:48 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:25:48 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:25:48 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:48 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:25:48 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:48 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:25:48 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:48 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:48 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:49 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:49 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:49 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:25:49 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:25:49 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:25:49 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:49 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:49 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:49 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:49 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:49 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:49 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:49 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:49 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:49 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:49 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:49 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:49 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:49 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:49 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:49 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:49 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:49 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:49 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:49 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:49 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:49 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:49 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:49 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:49 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:49 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:49 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:49 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:25:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:53 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:53 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:25:53 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:25:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:25:53 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:25:53 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:25:53 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg]))
2025-06-15 13:25:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:25:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:53 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:25:53 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:53 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:53 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:53 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:53 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:53 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:53 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:53 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:53 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:25:53 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:25:53 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:25:53 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:25:53 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:25:53 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg]))
2025-06-15 13:25:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:53 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:25:53 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:55 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:55 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:55 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:25:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:25:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:25:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:25:55 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:25:55 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:25:55 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:25:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:25:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:25:56 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:25:56 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:25:56 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:25:56 - c.r.q.service.TokenService - Validating token
2025-06-15 13:25:56 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:25:56 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:25:56 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:25:56 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:25:56 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:25:56 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:25:56 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:25:56 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:25:56 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:25:56 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:25:56 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:25:56 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:25:56 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:25:56 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:25:56 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:25:56 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:25:56 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:25:56 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:25:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:25:56 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:25:56 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:05 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:26:05 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:26:05 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:26:05 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=a@test.com, password=123456)]
2025-06-15 13:26:05 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:26:05 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: a@test.com
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Generating access token for email: a@test.com
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Generating refresh token for email: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: a@test.com
2025-06-15 13:26:05 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=2, name=a@test.com, e (truncated)...]
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:05 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:05 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:26:05 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:26:05 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:05 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:05 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:05 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:05 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:05 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:05 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:05 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:05 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:05 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:05 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:05 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:05 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:05 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:05 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:05 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:05 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:05 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:05 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:05 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:10 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:26:10 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:26:10 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:10 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:10 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:10 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:10 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:10 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:10 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:26:10 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:26:10 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:10 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:10 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:26:10 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:10 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:10 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:10 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:10 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:10 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:10 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:10 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:26:10 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:26:10 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:10 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:10 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:10 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:16 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:26:16 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:26:16 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:16 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:16 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:16 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:16 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:16 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:16 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:16 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:16 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:16 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:16 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:16 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:16 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:16 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:26:16 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:26:16 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:16 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:16 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:16 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:16 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:16 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:16 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:17 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:17 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:26:17 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:17 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:17 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:26:17 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:17 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:17 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:17 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:17 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:17 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:17 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:26:17 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:17 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:17 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:17 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:18 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:26:18 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:18 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:18 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:18 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:18 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:18 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:18 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:26:18 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:26:18 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:18 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:18 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:26:18 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:18 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:18 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:18 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:18 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:18 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:18 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:18 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:26:18 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:26:18 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:26:18 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:26:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:26:18 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:33 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:33 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:33 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:33 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:33 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:33 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:33 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:33 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:33 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:33 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:33 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:33 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:33 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:33 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:33 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:33 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:33 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:33 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:33 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:33 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:33 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:33 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:33 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:33 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:33 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:34 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:26:34 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:34 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:34 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:34 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:34 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:34 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:26:34 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:26:34 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:26:34 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:26:34 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:26:34 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:26:34 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:26:34 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:26:34 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:26:34 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:26:34 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:26:34 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:26:34 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:26:34 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:26:34 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:26:34 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:26:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:34 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:26:34 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:47 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:26:47 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:26:47 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:26:47 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=g@test.com, password=123456)]
2025-06-15 13:26:47 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:26:47 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: g@test.com
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Generating access token for email: g@test.com
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Generating refresh token for email: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: g@test.com
2025-06-15 13:26:47 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=3, name=gokul, email= (truncated)...]
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:47 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:47 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:26:47 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:26:47 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: g@test.com
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=3, userId=3, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:47 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:47 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:47 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:47 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:47 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:47 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:47 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:47 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:47 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:47 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:26:47 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:26:47 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:26:47 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:26:47 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:26:47 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:26:47 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:26:47 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:47 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:26:47 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:26:55 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:26:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:26:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:26:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:26:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:26:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:26:55 - c.r.q.security.JwtUtil - Extracted email from token: g@test.com
2025-06-15 13:26:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: g@test.com
2025-06-15 13:26:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: g@test.com
2025-06-15 13:26:55 - c.r.q.s.CustomUserDetailsService - ROLE_DELIVERY_PERSON
2025-06-15 13:26:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_DELIVERY_PERSON
2025-06-15 13:26:55 - c.r.q.s.CustomUserDetailsService - User g@test.com successfully loaded with role: ROLE_DELIVERY_PERSON
2025-06-15 13:26:55 - c.r.q.security.JwtFilter - authorities : [ROLE_DELIVERY_PERSON]
2025-06-15 13:26:55 - c.r.q.security.JwtFilter - setting requst.email : g@test.com
2025-06-15 13:26:55 - c.r.q.security.JwtFilter - User authenticated: g@test.com
2025-06-15 13:26:55 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:26:55 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:26:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:26:55 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:26:55 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:26:55 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:26:55 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:26:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:26:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:26:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:07 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:27:07 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:27:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:27:07 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=a@test.com, password=123456)]
2025-06-15 13:27:07 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:27:07 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: a@test.com
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Generating access token for email: a@test.com
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Generating refresh token for email: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: a@test.com
2025-06-15 13:27:07 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=2, name=a@test.com, e (truncated)...]
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:07 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:07 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:27:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:27:07 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:07 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:07 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:27:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:27:07 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:27:07 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:07 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:07 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:07 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:07 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:07 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:07 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:07 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:07 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:27:07 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:27:07 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:27:07 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:27:07 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:07 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:27:07 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:31 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:31 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:31 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:31 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:31 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:31 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:31 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:31 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:31 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:31 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:31 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:31 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:31 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:31 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:31 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:31 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:32 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items/decrease?productId=1
2025-06-15 13:27:32 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:27:32 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:32 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:32 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:32 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:32 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:32 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:32 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:27:32 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:27:32 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:32 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:32 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:32 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:32 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:27:32 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:32 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:32 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:32 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:32 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:32 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:32 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:32 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items/decrease?productId=1
2025-06-15 13:27:32 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items/decrease?productId=1", parameters={masked}
2025-06-15 13:27:32 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#decreaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:32 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:32 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:32 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:32 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:36 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/cart/items?productId=1
2025-06-15 13:27:36 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:36 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:36 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:36 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:36 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:36 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:36 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:36 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:36 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:36 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:36 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:36 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:36 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:36 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:36 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:36 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:36 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:36 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:36 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:36 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:36 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:36 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:36 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:36 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:36 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:37 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:37 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:37 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:37 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:37 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:37 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:37 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:37 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:37 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:37 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:37 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:37 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:37 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:37 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:37 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:38 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:38 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:38 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:38 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:38 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:38 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:38 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:38 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:38 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:38 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:38 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:38 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:38 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:38 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:38 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:38 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:38 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:38 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:38 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:38 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:38 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:38 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:39 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:39 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:39 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:39 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:39 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:39 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:39 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:39 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:39 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:39 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:39 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:39 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:39 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:39 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:39 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/cart/items?productId=1
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/cart/items?productId=1", parameters={masked}
2025-06-15 13:27:39 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#increaseQuantity(Long, HttpServletRequest)
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Adding product 1  to cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: a@test.com
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Product 1 already exists in cart. Updating quantity.
2025-06-15 13:27:39 - c.r.q.service.impl.CartServiceImpl - Cart updated successfully for user: a@test.com
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:39 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=2, userId=2, cartItems=[CartItemDTO(p (truncated)...]
2025-06-15 13:27:39 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:45 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:27:45 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:45 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:45 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:45 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:45 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:45 - c.r.q.security.JwtUtil - Extracted email from token: a@test.com
2025-06-15 13:27:45 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: a@test.com
2025-06-15 13:27:45 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: a@test.com
2025-06-15 13:27:45 - c.r.q.s.CustomUserDetailsService - ROLE_CUSTOMER
2025-06-15 13:27:45 - c.r.q.s.CustomUserDetailsService - user authorityROLE_CUSTOMER
2025-06-15 13:27:45 - c.r.q.s.CustomUserDetailsService - User a@test.com successfully loaded with role: ROLE_CUSTOMER
2025-06-15 13:27:45 - c.r.q.security.JwtFilter - authorities : [ROLE_CUSTOMER]
2025-06-15 13:27:45 - c.r.q.security.JwtFilter - setting requst.email : a@test.com
2025-06-15 13:27:45 - c.r.q.security.JwtFilter - User authenticated: a@test.com
2025-06-15 13:27:45 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:27:45 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:27:45 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:27:45 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:27:45 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:27:45 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:27:45 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:27:45 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:45 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:27:45 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:54 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:27:54 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:27:54 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:54 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:27:54 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:27:54 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:27:54 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:27:54 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:27:54 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:27:54 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:27:54 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:27:55 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:27:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:27:55 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:27:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:27:55 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:27:55 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:27:55 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:27:55 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:27:55 - c.r.q.service.TokenService - Validating token
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:27:55 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:27:55 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:27:55 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:27:55 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:27:55 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:27:55 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:27:55 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:27:55 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:27:55 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:27:55 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:27:55 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:01 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:01 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:01 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:01 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:01 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:01 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:01 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:01 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:01 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:01 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:01 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:01 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:01 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:01 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:01 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:01 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:01 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:01 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:01 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:01 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:02 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:02 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:02 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:02 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:02 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:02 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:02 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:02 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:02 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:02 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:02 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:02 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:02 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:02 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:02 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:04 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:04 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:04 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:04 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:04 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:04 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:04 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:04 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:04 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:04 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:04 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:04 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:04 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:04 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:04 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:04 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:04 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:04 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:04 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:04 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:04 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:04 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:04 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:04 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:04 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:04 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:04 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:04 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:04 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:04 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:04 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:04 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:08 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:08 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:08 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:08 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:08 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:08 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:08 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:08 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:08 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:08 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:08 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:08 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:08 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:08 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:08 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:08 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:08 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:08 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:28:08 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:08 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:08 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:08 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:08 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:08 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:08 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:08 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:08 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:28:08 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:28:08 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:08 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:28:08 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:28:08 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:08 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:08 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:08 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:16 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:16 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:16 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:16 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:16 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:16 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:16 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:16 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:16 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:16 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:16 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:16 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:16 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:16 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:16 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:16 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:16 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:16 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:16 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:16 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:16 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:16 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:16 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:16 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:16 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:16 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:16 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:16 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:16 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:16 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:16 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:18 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:28:18 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:18 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:18 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:18 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:18 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:18 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:18 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:28:18 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:28:18 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:28:18 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:28:18 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:28:18 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg]))
2025-06-15 13:28:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:28:18 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:18 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products/1
2025-06-15 13:28:18 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:18 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:18 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:18 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:18 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:18 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:18 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:18 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:18 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products/1
2025-06-15 13:28:18 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products/1", parameters={}
2025-06-15 13:28:18 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProductById(Long)
2025-06-15 13:28:18 - c.r.q.controllers.ProductController - Entering getProductById with ID: 1
2025-06-15 13:28:18 - c.r.q.s.impl.ProductServiceImpl - Fetching product with ID: 1
2025-06-15 13:28:18 - c.r.q.controllers.ProductController - Exiting getProductById with response: ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qyt.. it is good product.. , price=150.0, updatedAt=2025-06-15T07:47:00.371314Z, createdAt=2025-06-15T07:47:00.371302Z, images=[/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg]))
2025-06-15 13:28:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:18 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=ProductDTO(productId=1, name=apple, description=4 qy (truncated)...]
2025-06-15 13:28:18 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:20 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:20 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:20 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:20 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:20 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:20 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:20 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:20 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:20 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:20 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:20 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:20 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:20 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:20 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:20 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg", parameters={}
2025-06-15 13:28:20 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#deleteImage(Long, String)
2025-06-15 13:28:20 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:20 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:20 - c.r.q.controllers.ImageController - Deleting image 'b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg' for product ID: 1
2025-06-15 13:28:20 - c.r.q.service.impl.ImageServiceImpl - Deleting image 'b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg' for product ID: 1
2025-06-15 13:28:20 - c.r.q.service.impl.ImageServiceImpl - ✅ Image moved to deleted folder: src/main/resources/static/deleted/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - c.r.q.service.impl.ImageServiceImpl - /images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - c.r.q.service.impl.ImageServiceImpl - /images/1/b85dcaae-84ce-455b-9fda-bce5f2b365c3.jpeg
2025-06-15 13:28:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:20 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image moved to deleted folder, data=null)]
2025-06-15 13:28:20 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:24 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/upload/1
2025-06-15 13:28:24 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/images/upload/1
2025-06-15 13:28:24 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:24 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:24 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:24 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:24 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:24 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:24 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:24 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:24 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:24 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:24 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:24 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:24 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:24 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:24 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/images/upload/1
2025-06-15 13:28:24 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/images/upload/1", parameters={multipart}
2025-06-15 13:28:24 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#uploadImage(MultipartFile[], Long)
2025-06-15 13:28:24 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:24 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.uploadImage(org.springframework.web.multipart.MultipartFile[],java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:24 - c.r.q.controllers.ImageController - Uploading image for product ID: 1
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - Uploading images for product ID: 1
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - 📷 Original image size: 629.36 KB
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - Converting apple_158989157.jpg to JPEG format
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - ✅ Image '0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg' uploaded successfully. Final size: 72.87 KB
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - ⏱️ Image '0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg' uploaded in 72 ms.
2025-06-15 13:28:24 - c.r.q.service.impl.ImageServiceImpl - Total 0 images uploaded successfully.
2025-06-15 13:28:24 - c.r.q.controllers.ImageController - Image uploaded successfully: [ImageUploadResultDTO(fileName=0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg, success=true, imageUrl=/images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg, errorMessage=null, sizeInBytes=74614)]
2025-06-15 13:28:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:24 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image uploaded successfully, data=[ImageUploadResultDTO(fileName=0 (truncated)...]
2025-06-15 13:28:24 - o.s.web.servlet.DispatcherServlet - Completed 201 CREATED
2025-06-15 13:28:26 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:26 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:26 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:26 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:26 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:26 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:26 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:26 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:26 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:26 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:26 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:26 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:26 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:26 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:26 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg", parameters={}
2025-06-15 13:28:26 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ImageController#deleteImage(Long, String)
2025-06-15 13:28:26 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:26 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ImageController.deleteImage(java.lang.Long,java.lang.String); target is of class [com.roshan798.quick_commerce_backend.controllers.ImageController]
2025-06-15 13:28:26 - c.r.q.controllers.ImageController - Deleting image '0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg' for product ID: 1
2025-06-15 13:28:26 - c.r.q.service.impl.ImageServiceImpl - Deleting image '0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg' for product ID: 1
2025-06-15 13:28:26 - c.r.q.service.impl.ImageServiceImpl - ✅ Image moved to deleted folder: src/main/resources/static/deleted/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - c.r.q.service.impl.ImageServiceImpl - /images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - c.r.q.service.impl.ImageServiceImpl - /images/1/0c789d78-b6e6-44ea-8c14-6036d1aca6c4.jpeg
2025-06-15 13:28:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:26 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Image moved to deleted folder, data=null)]
2025-06-15 13:28:26 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:37 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:37 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:37 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:37 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:37 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:37 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:37 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:37 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:37 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:37 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:37 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:37 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:37 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:37 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:37 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:37 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:37 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:37 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:37 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:37 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:37 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:37 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:37 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:37 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc
2025-06-15 13:28:37 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=1000&sortingOrder=createdAt-desc", parameters={masked}
2025-06-15 13:28:37 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:28:37 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 1000, OrderBy: updatedAt-desc
2025-06-15 13:28:37 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 1000, orderBy: updatedAt, direction: desc
2025-06-15 13:28:37 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:28:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:37 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:28:37 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:28:42 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/products/1
2025-06-15 13:28:42 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/products/1
2025-06-15 13:28:42 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:42 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:42 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:42 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:42 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:42 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:42 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:42 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:42 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:42 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:42 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:42 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:42 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:42 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:42 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/products/1
2025-06-15 13:28:42 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/products/1", parameters={}
2025-06-15 13:28:42 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#deleteProductById(Long)
2025-06-15 13:28:42 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.deleteProductById(java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:28:42 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.deleteProductById(java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:28:42 - c.r.q.controllers.ProductController - Entering deleteProductById with ID: 1
2025-06-15 13:28:42 - c.r.q.s.impl.ProductServiceImpl - fetching product with id: 1
2025-06-15 13:28:42 - o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1451, SQLState: 23000
2025-06-15 13:28:42 - o.h.e.jdbc.spi.SqlExceptionHelper - Cannot delete or update a parent row: a foreign key constraint fails (`quick_commerce`.`cart_items`, CONSTRAINT `FK1re40cjegsfvw58xrkdp6bac6` FOREIGN KEY (`product_id`) REFERENCES `products` (`id`))
2025-06-15 13:28:42 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleGenericException(Exception)
2025-06-15 13:28:42 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:42 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: could not execute statement [Cannot delete or update a par (truncated)...]
2025-06-15 13:28:42 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Cannot delete or update a parent row: a foreign key constraint fails (`quick_commerce`.`cart_items`, CONSTRAINT `FK1re40cjegsfvw58xrkdp6bac6` FOREIGN KEY (`product_id`) REFERENCES `products` (`id`))] [delete from products where id=?]; SQL [delete from products where id=?]; constraint [null]]
2025-06-15 13:28:42 - o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-06-15 13:28:46 - o.s.security.web.FilterChainProxy - Securing DELETE /api/v1/products/1
2025-06-15 13:28:46 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:46 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:46 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:46 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:46 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:46 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:46 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:46 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:46 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:46 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:46 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:46 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:46 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:46 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:46 - o.s.security.web.FilterChainProxy - Secured DELETE /api/v1/products/1
2025-06-15 13:28:46 - o.s.web.servlet.DispatcherServlet - DELETE "/api/v1/products/1", parameters={}
2025-06-15 13:28:46 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#deleteProductById(Long)
2025-06-15 13:28:46 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorizing method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.deleteProductById(java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:28:46 - o.s.s.a.m.AuthorizationManagerBeforeMethodInterceptor - Authorized method invocation ReflectiveMethodInvocation: public org.springframework.http.ResponseEntity com.roshan798.quick_commerce_backend.controllers.ProductController.deleteProductById(java.lang.Long); target is of class [com.roshan798.quick_commerce_backend.controllers.ProductController]
2025-06-15 13:28:46 - c.r.q.controllers.ProductController - Entering deleteProductById with ID: 1
2025-06-15 13:28:46 - c.r.q.s.impl.ProductServiceImpl - fetching product with id: 1
2025-06-15 13:28:46 - o.h.e.jdbc.spi.SqlExceptionHelper - SQL Error: 1451, SQLState: 23000
2025-06-15 13:28:46 - o.h.e.jdbc.spi.SqlExceptionHelper - Cannot delete or update a parent row: a foreign key constraint fails (`quick_commerce`.`cart_items`, CONSTRAINT `FK1re40cjegsfvw58xrkdp6bac6` FOREIGN KEY (`product_id`) REFERENCES `products` (`id`))
2025-06-15 13:28:46 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleGenericException(Exception)
2025-06-15 13:28:46 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:46 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: could not execute statement [Cannot delete or update a par (truncated)...]
2025-06-15 13:28:46 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [org.springframework.dao.DataIntegrityViolationException: could not execute statement [Cannot delete or update a parent row: a foreign key constraint fails (`quick_commerce`.`cart_items`, CONSTRAINT `FK1re40cjegsfvw58xrkdp6bac6` FOREIGN KEY (`product_id`) REFERENCES `products` (`id`))] [delete from products where id=?]; SQL [delete from products where id=?]; constraint [null]]
2025-06-15 13:28:46 - o.s.web.servlet.DispatcherServlet - Completed 500 INTERNAL_SERVER_ERROR
2025-06-15 13:28:50 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:28:50 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:28:50 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:28:50 - c.r.q.service.TokenService - Validating token
2025-06-15 13:28:50 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:28:50 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:28:50 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:28:50 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:28:50 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:28:50 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:28:50 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:28:50 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:28:50 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:28:50 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:28:50 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:28:50 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:28:50 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:28:50 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:28:50 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:28:50 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:28:50 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:28:50 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:28:50 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:28:50 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:28:50 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:29:13 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:29:13 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:29:13 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:29:13 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:29:13 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:29:13 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:29:13 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:29:13 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:29:13 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:29:13 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:29:13 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:29:13 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:29:13 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:29:13 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:29:13 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:29:13 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:29:13 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:29:13 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:29:13 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:29:13 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:29:13 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:29:13 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:30:11 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=52s273ms).
2025-06-15 13:31:02 - o.s.security.web.FilterChainProxy - Securing OPTIONS /api/v1/auth/login
2025-06-15 13:31:02 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/login
2025-06-15 13:31:02 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:31:02 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:31:02 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:31:02 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/login
2025-06-15 13:31:02 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/login", parameters={}
2025-06-15 13:31:02 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#login(UserLoginDTO, HttpServletResponse)
2025-06-15 13:31:02 - o.s.w.s.m.m.a.RequestResponseBodyMethodProcessor - Read "application/json;charset=UTF-8" to [UserLoginDTO(email=j@test.com, password=123456)]
2025-06-15 13:31:02 - c.r.q.controllers.AuthController - Entering login
2025-06-15 13:31:02 - c.r.q.service.impl.AuthServiceImpl - Entering login method for email: j@test.com
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Generating access token for email: j@test.com
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Generating refresh token for email: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.AuthServiceImpl - User logged in successfully: j@test.com
2025-06-15 13:31:03 - c.r.q.controllers.AuthController - Exit login
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged in successfully, data=UserDTO(id=1, name=jitendra, ema (truncated)...]
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:31:03 - c.r.q.service.TokenService - Validating token
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:31:03 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/cart
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/cart", parameters={}
2025-06-15 13:31:03 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.CartController#getUserCart(HttpServletRequest)
2025-06-15 13:31:03 - c.r.q.service.impl.CartServiceImpl - Fetching cart for user: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.CartServiceImpl - Cart fetched successfully for user: j@test.com
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=Success, data=CartDTO(cartId=1, userId=1, cartItems=[], totalPrice (truncated)...]
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:31:03 - c.r.q.service.TokenService - Validating token
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:31:03 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:31:03 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:31:03 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:31:03 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:31:03 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/products?page=1&size=6
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:31:03 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:31:03 - c.r.q.service.TokenService - Validating token
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:31:03 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:31:03 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:31:03 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:31:03 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:31:03 - o.s.security.web.FilterChainProxy - Secured GET /api/v1/products?page=1&size=6
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - GET "/api/v1/products?page=1&size=6", parameters={masked}
2025-06-15 13:31:03 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.ProductController#getProducts(int, int, String)
2025-06-15 13:31:03 - c.r.q.controllers.ProductController - Fetching products - Page: 1, Size: 6, OrderBy: updatedAt-desc
2025-06-15 13:31:03 - c.r.q.s.impl.ProductServiceImpl - Fetching products with page: 1, size: 6, orderBy: updatedAt, direction: desc
2025-06-15 13:31:03 - c.r.q.s.impl.ProductServiceImpl - Products fetched successfully: 1 records found
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:31:03 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [PaginatedResponseDTO(success=true, message=Products fetched successfully, data=[ProductDTO(productId (truncated)...]
2025-06-15 13:31:03 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:31:45 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/logout
2025-06-15 13:31:45 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:31:45 - c.r.q.service.TokenService - Retrieved token: [HIDDEN]
2025-06-15 13:31:45 - c.r.q.service.TokenService - Validating token
2025-06-15 13:31:45 - c.r.q.security.JwtUtil - Token is valid.
2025-06-15 13:31:45 - c.r.q.service.TokenService - Token validation result: true
2025-06-15 13:31:45 - c.r.q.security.JwtUtil - Extracted email from token: j@test.com
2025-06-15 13:31:45 - c.r.q.s.CustomUserDetailsService - Attempting to load user by email: j@test.com
2025-06-15 13:31:45 - c.r.q.service.impl.UserServiceImpl - Fetching user by Email: j@test.com
2025-06-15 13:31:45 - c.r.q.s.CustomUserDetailsService - ROLE_ADMIN
2025-06-15 13:31:45 - c.r.q.s.CustomUserDetailsService - user authorityROLE_ADMIN
2025-06-15 13:31:45 - c.r.q.s.CustomUserDetailsService - User j@test.com successfully loaded with role: ROLE_ADMIN
2025-06-15 13:31:45 - c.r.q.security.JwtFilter - authorities : [ROLE_ADMIN]
2025-06-15 13:31:45 - c.r.q.security.JwtFilter - setting requst.email : j@test.com
2025-06-15 13:31:45 - c.r.q.security.JwtFilter - User authenticated: j@test.com
2025-06-15 13:31:45 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/logout
2025-06-15 13:31:45 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/logout", parameters={}
2025-06-15 13:31:45 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#logout(HttpServletRequest, HttpServletResponse)
2025-06-15 13:31:45 - c.r.q.controllers.AuthController - Entering logout
2025-06-15 13:31:45 - c.r.q.service.impl.AuthServiceImpl - Entering logout
2025-06-15 13:31:45 - c.r.q.service.impl.AuthServiceImpl - Exit logout
2025-06-15 13:31:45 - c.r.q.controllers.AuthController - Exit logout
2025-06-15 13:31:45 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:31:45 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=true, message=User logged out successfully, data=true)]
2025-06-15 13:31:45 - o.s.web.servlet.DispatcherServlet - Completed 200 OK
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:32:28 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:32:28 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:32:28 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:32:28 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:32:28 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:32:28 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:32:28 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:32:28 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:32:28 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 13:32:28 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 13:32:28 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 13:32:28 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 13:32:28 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 13:32:28 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 13:32:28 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 13:32:28 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:32:28 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 13:32:28 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 13:32:28 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 13:32:28 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:32:28 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 13:32:28 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 13:32:28 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 13:37:51 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=5m39s990ms).
2025-06-15 14:32:11 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=54m20s512ms).
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing POST /api/v1/auth/refresh
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Secured POST /api/v1/auth/refresh
2025-06-15 14:45:33 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 14:45:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 14:45:33 - o.s.web.servlet.DispatcherServlet - POST "/api/v1/auth/refresh", parameters={}
2025-06-15 14:45:33 - o.s.w.s.m.m.a.RequestMappingHandlerMapping - Mapped to com.roshan798.quick_commerce_backend.controllers.AuthController#refreshTokens(HttpServletRequest, HttpServletResponse)
2025-06-15 14:45:33 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 14:45:33 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 14:45:33 - c.r.q.controllers.AuthController - Entering refreshTokens
2025-06-15 14:45:33 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - c.r.q.service.impl.AuthServiceImpl - Entering refreshTokens
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: refresh_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 14:45:33 - c.r.q.service.impl.AuthServiceImpl - Invalid or missing refresh token
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 14:45:33 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 14:45:33 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Using @ExceptionHandler com.roshan798.quick_commerce_backend.exceptions.GlobalExceptionHandler#handleInvalidTokenException(InvalidTokenException)
2025-06-15 14:45:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 14:45:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Using 'application/json', given [application/json] and supported [application/json, application/*+json, application/yaml]
2025-06-15 14:45:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing GET /api/v1/cart
2025-06-15 14:45:33 - o.s.w.s.m.m.a.HttpEntityMethodProcessor - Writing [ResponseDTO(success=false, message=Error: Invalid refresh token, data=null)]
2025-06-15 14:45:33 - c.r.q.service.TokenService - Retrieving token from cookies: access_token
2025-06-15 14:45:33 - c.r.q.service.TokenService - No cookies found in the request
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 14:45:33 - o.s.security.web.FilterChainProxy - Securing GET /error
2025-06-15 14:45:33 - o.s.s.w.a.AnonymousAuthenticationFilter - Set SecurityContextHolder to anonymous SecurityContext
2025-06-15 14:45:33 - o.s.s.w.a.Http403ForbiddenEntryPoint - Pre-authenticated entry point called. Rejecting access
2025-06-15 14:45:33 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 14:45:33 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 14:45:33 - o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver - Resolved [com.roshan798.quick_commerce_backend.exceptions.InvalidTokenException: Invalid refresh token]
2025-06-15 14:45:33 - o.s.web.servlet.DispatcherServlet - Completed 401 UNAUTHORIZED
2025-06-15 14:45:39 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=13m27s591ms).
2025-06-15 14:47:45 - com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m6s417ms).
2025-06-15 15:00:36 - o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin - Application shutdown requested.
2025-06-15 15:00:36 - o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-06-15 15:00:36 - o.a.coyote.http11.Http11NioProtocol - Pausing ProtocolHandler ["http-nio-8080"]
2025-06-15 15:00:36 - o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-06-15 15:00:36 - o.a.coyote.http11.Http11NioProtocol - Stopping ProtocolHandler ["http-nio-8080"]
2025-06-15 15:00:36 - o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-06-15 15:00:36 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-06-15 15:00:36 - com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
